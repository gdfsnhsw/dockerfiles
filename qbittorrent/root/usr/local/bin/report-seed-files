#!/bin/bash

tmplist=$(mktemp)
tmppaste1=$(mktemp)
tmppaste2=$(mktemp)
tmppaste3=$(mktemp)
seed_files=/data/diy/seed_files.list

. /usr/local/bin/share

echo -e "本脚本用于生成本qBittorrent客户端中所有种子中的文件清单，生成的清单位于容器内的：$seed_files\n"
echo -e "种子越多，生成清单也就越耗时，请勿在生成清单过程中打断...\n"
read -p "请确认是否继续执行本脚本 [y/N]：" is_report
echo
if [[ $is_report == [Yy] || $is_report == [Yy][Ee][Ss] ]]; then
    read -p "是否在控制台显示处理进度（即是否显示当前正在处理的种子编号和hash，如不显示可大约减少40%运行时间） [Y/n]：" is_console
    echo -e "\n开始生成做种文件清单...\n"
    torrents_info=$($cmd_curl ${api_url_base}/torrents/info)
    hashes=( $(echo "$torrents_info" | jq -r .[].hash | tee $tmppaste1) )
    sed -i "s|^|_|g" $tmppaste1
    echo "$torrents_info" | jq .[].save_path > $tmppaste2
    paste -d "=" $tmppaste1 $tmppaste2 > $tmppaste3
    . $tmppaste3
    if [[ $is_console == [Nn] || $is_console == [Nn][Oo] ]]; then
        for ((i=0; i<${#hashes[@]}; i++)); do
            eval save_path=\$_${hashes[i]}
            $cmd_curl "${api_url_base}/torrents/files?hash=${hashes[i]}" | jq -r .[].name | sed "s|^|$save_path/|g" >> $tmplist
        done
    else
        for ((i=0; i<${#hashes[@]}; i++)); do
            echo "$(( $i + 1)): ${hashes[i]}"
            eval save_path=\$_${hashes[i]}
            $cmd_curl "${api_url_base}/torrents/files?hash=${hashes[i]}" | jq -r .[].name | sed "s|^|$save_path/|g" >> $tmplist
        done
    fi
    sort -u -o $seed_files $tmplist
    rm $tmplist $tmppaste1 $tmppaste2 $tmppaste3
    [[ $(id -u) -eq 0 ]] && chown "${PUID}:${PGID}" $seed_files
    echo -e "\n生成完毕，生成的清单文件为：$seed_files\n"
fi
